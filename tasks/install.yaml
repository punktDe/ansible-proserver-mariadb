---
- name: Set up MariaDB repository (Debian/Ubuntu)
  when:
    - ansible_os_family == 'Debian'
    - mariadb.repository.apt.repository
  block:
    - name: Install GPG
      ansible.builtin.apt:
        update_cache: yes
        name:
          - gpg
          - gpg-agent

    - name: Add MariaDB repository key
      ansible.builtin.apt_key:
        url: "{{ mariadb.repository.apt.key_url }}"

    - name: Add MariaDB repository
      loop:
        - /etc/apt/sources.list.d/mariadb.list
      ansible.builtin.copy:
        content: |
          {{ mariadb.repository.apt.repository }}
        dest: "{{ item }}"
        owner: root
        mode: "0644"
      register: mariadb_add_apt_repository

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes
      when: mariadb_add_apt_repository.changed

- name: Install MariaDB (Debian/Ubuntu)
  when:
    - ansible_os_family == 'Debian'
    - not mariadb.galera.arbitrator
  block:
    - name: Ensure data dir is mounted before MariaDB is started
      loop:
        - /etc/systemd/system/mariadb.service.d/UnitRequiresMountsFor.conf
      community.general.ini_file:
        path: "{{ item }}"
        create: yes
        section: Unit
        owner: root
        mode: "0644"
        option: RequiresMountsFor
        value: /var/lib/mysql

    - name: Install MariaDB
      ansible.builtin.apt:
        name:
          - mariadb-server
          - python3-pymysql

- name: Install garb (Debian/Ubuntu)
  when:
    - ansible_os_family == 'Debian'
    - mariadb.galera.arbitrator
  block:
    - name: Insatll galera-arbitrator
      ansible.builtin.apt:
        name:
          - galera-arbitrator-4
